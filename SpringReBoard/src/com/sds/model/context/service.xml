<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 비즈니스 로직 객체를 자동 등록 -->
	<context:component-scan base-package="com.sds">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 데이터베이스 연동 관련 -->
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/oracle"
		resource-ref="true" />

	<!-- 트랜잭션 매니져란 원래는 DB에 따라 Commit하는 방법이 다르지만 Spring에서는 DB에 상관 없이 데이터베이스 연동만 
		만들어주면 개발자가 신경 쓰지 않고 내부적으로 돌아가게 만들어주는데 그 연동을 만들어주는 것이 트랜잭션 매니져이다. 개발자가 사용하는 
		기술이 jdbc, mybatis 일 경우 DataSourceTransactionManager를 매니저로 등록 hibernate 일 
		경우 HibernateTransactionManager를 매니저로 등록 -->
	<!-- 트랜잭션 매니져 등록 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />

	<!-- 트랜잭션 처리를 자바코드에서 일일이 처리할 때 사용 (서비스 클래스에서 어노테이션으로 @Transactional을 걸 떄) -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->	<!-- 어노테이션이 있다면 이것을 쓰겠다 라는 얘기 -->

	<!-- AOP를 이용하여 어플리케이션 전체에 걸수 있다. -->
	<tx:advice id="myTx" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="reply" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<!-- tx:advice가 적용될 지점 서술 -->
		<aop:pointcut expression="execution(public * com.sds.model..*ServiceImpl.*(..))"
			id="ServiceCut" />
		<aop:advisor advice-ref="myTx" pointcut-ref="ServiceCut" />
	</aop:config>

	<!-- jdbc 템플릿 셋팅 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource" />

</beans>
