/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.38
 * Generated at: 2016-11-04 04:19:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.min.domain.Lecture;
import com.min.common.PagingManager;
import com.min.domain.LectureCategory;
import java.util.List;

public final class lecture_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.min.common.PagingManager");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.min.domain.LectureCategory");
    _jspx_imports_classes.add("com.min.domain.Lecture");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	List listLec= (List)request.getAttribute("listLec");
	List listLecCat = (List)request.getAttribute("listLecCat");
	PagingManager pm=(PagingManager)request.getAttribute("pm");
	int selectValue = (Integer)request.getAttribute("select");

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "inc/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("menu_name", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("lecture", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("<!-- Content Wrapper. Contains page content -->\r\n");
      out.write("<div class=\"content-wrapper\">\r\n");
      out.write("\t<!-- Content Header (Page header) -->\r\n");
      out.write("\t<section class=\"content-header\">\r\n");
      out.write("\t\t<h1>모든 강의</h1>\r\n");
      out.write("\t\t<!--       <ol class=\"breadcrumb\">\r\n");
      out.write("        <li><a href=\"#\"><i class=\"fa fa-dashboard\"></i> Level</a></li>\r\n");
      out.write("        <li class=\"active\">Here</li>\r\n");
      out.write("      </ol> -->\r\n");
      out.write("\t</section>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Main content -->\r\n");
      out.write("\t<section class=\"content\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-12\" style=\"margin-bottom: 5px;\">\r\n");
      out.write("\t\t\t\t<div class=\"dataTables_length\">\r\n");
      out.write("\t\t\t\t\t<select id=\"list_lec_cat_id\" name=\"lecturecategory_id\" class=\"form-control input-sm\" style=\"width: auto;\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"0\">모든 카테고리</option>\r\n");
      out.write("\t\t\t\t\t\t");
for(int i=0; i<listLecCat.size(); ++i){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
LectureCategory lectureCategory = (LectureCategory)listLecCat.get(i);
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
if(lectureCategory.getLectureCategory_id() == selectValue){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=\"");
      out.print(lectureCategory.getLectureCategory_id());
      out.write("\" selected>");
      out.print(lectureCategory.getTitle());
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t\t");
}else{
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=\"");
      out.print(lectureCategory.getLectureCategory_id());
      out.write('"');
      out.write('>');
      out.print(lectureCategory.getTitle());
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t<div class=\"box box-primary\">\r\n");
      out.write("\t\t\t\t\t<div class=\"box-body\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"dataTables_wrapper form-inline dt-bootstrap\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<table class=\"table table-bordered table-hover text-center\" style=\"table-layout: fixed\" role=\"grid\" aria-describedby=\"example2_info\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr role=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th rowspan=\"1\" colspan=\"1\" style=\"width: 40px !important;\"><input type=\"checkbox\" name=\"checkAll\"></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th rowspan=\"1\" colspan=\"1\">카테고리</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th rowspan=\"1\" colspan=\"1\">제목</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th rowspan=\"1\" colspan=\"1\">설명</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th rowspan=\"1\" colspan=\"1\">등록일</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th rowspan=\"1\" colspan=\"1\">조회수</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");

												int curPos = pm.getCurPos();
												int num = pm.getNum();
											
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
for(int i=1; i<=pm.getPageSize(); i++){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
if(num<1)break; 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
Lecture lecture = (Lecture)listLec.get(curPos++); num--;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");

												String categoryName = null;
												String regDate = lecture.getRegdate().substring(0, 11);
												
											
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");

												for(int j=0; j<listLecCat.size(); ++j){
													LectureCategory lectureCategory = (LectureCategory)listLecCat.get(j);
													if(lecture.getLecturecategory_id() == lectureCategory.getLectureCategory_id()){
														categoryName = lectureCategory.getTitle();
														break;
													}
												}
											
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
if(i%2 == 1){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr role=\"row\" class=\"odd\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
}else{ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr role=\"row\" class=\"even\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
} 
      out.write(" <!-- end of if -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td style=\"width: 40px !important;\"><input type=\"checkbox\" name=\"checkValue\" value=\"");
      out.print(lecture.getLecture_id());
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td style=\"text-overflow: ellipsis; overflow: hidden; white-space: nowrap;\">");
      out.print(categoryName);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td style=\"text-overflow: ellipsis; overflow: hidden; white-space: nowrap;\"><a href=\"/admin/detaillec.do?lecture_id=");
      out.print(lecture.getLecture_id());
      out.write('"');
      out.write('>');
      out.print(lecture.getTitle());
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td style=\"text-overflow: ellipsis; overflow: hidden; white-space: nowrap;\">");
      out.print(lecture.getContent());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td style=\"text-overflow: ellipsis; overflow: hidden; white-space: nowrap;\">");
      out.print(regDate);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td style=\"text-overflow: ellipsis; overflow: hidden; white-space: nowrap;\">");
      out.print(lecture.getHit());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
} 
      out.write(" <!-- end of for -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-5\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" onClick=\"deleteSomeLecture(");
      out.print(selectValue);
      out.write(")\">삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-7\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"dataTables_paginate paging_simple_numbers\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<ul class=\"pagination\">\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li class=\"paginate_button previous\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");
if(pm.getFirstPage()-1<1){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<a style=\"pointer-events: none; cursor: not-allowed;\">이전</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");
}else{ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"/admin/listleccat.do?currentPage=");
      out.print(pm.getFirstPage()-1);
      out.write("\">Previous</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
for(int i=pm.getFirstPage(); i<pm.getLastPage(); ++i){
      out.write("\r\n");
      out.write("    \t\t\t\t\t\t\t\t\t\t");
if(i>pm.getTotalPage())break; 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
if(i==pm.getCurrentPage()){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li class=\"paginate_button active\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
}else{
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li class=\"paginate_button\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
}
      out.write(" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"/admin/listleccat.do?currentPage=");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t");
}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t<li class=\"paginate_button previous\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t");
if(pm.getLastPage()+1>=pm.getTotalPage()){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t<a style=\"pointer-events: none; cursor: not-allowed;\">다음</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t");
}else{
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t<a href=\"/admin/listleccat.do?currentPage=");
      out.print(pm.getLastPage()+1);
      out.write("\">Next</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t</li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- /.box-body -->\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<!-- /.content -->\r\n");
      out.write("</div>\r\n");
      out.write("<!-- /.content-wrapper -->\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "inc/footer.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("menu_name", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("lecture", request.getCharacterEncoding()), out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
