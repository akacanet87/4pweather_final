/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.38
 * Generated at: 2016-11-04 04:31:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.min.domain.Lecture;
import com.min.domain.LectureCategory;
import java.util.List;

public final class lecture_005fdetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.min.domain.LectureCategory");
    _jspx_imports_classes.add("com.min.domain.Lecture");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	List listLecCat = (List)request.getAttribute("listLecCat");
	Lecture lecture = (Lecture)request.getAttribute("lecture");

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "inc/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("menu_name", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("lecture", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("<!-- Content Wrapper. Contains page content -->\r\n");
      out.write("<div class=\"content-wrapper\">\r\n");
      out.write("\t<!-- Content Header (Page header) -->\r\n");
      out.write("\t<section class=\"content-header\">\r\n");
      out.write("\t\t<h1>강의 수정</h1>\r\n");
      out.write("\t</section>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Main content -->\r\n");
      out.write("\t<section class=\"content\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t<!-- general form elements -->\r\n");
      out.write("\t\t\t\t<div class=\"box box-primary\">\r\n");
      out.write("\t\t\t\t\t<!-- form start -->\r\n");
      out.write("\t\t\t\t\t<form role=\"form\" name=\"lectureDetailForm\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"box-body\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\" id=\"lec_category_id\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"lecturecategory_id\">카테고리</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<select class=\"form-control input-sm\" id=\"lecturecategory_id\" name=\"lecturecategory_id\" style=\"width: auto;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
for(int i=listLecCat.size()-1; i>=0; --i){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
 LectureCategory lectureCategory = (LectureCategory)listLecCat.get(i);
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
if(lectureCategory.getLectureCategory_id() == lecture.getLecturecategory_id()){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"");
      out.print(lectureCategory.getLectureCategory_id());
      out.write("\" selected>");
      out.print(lectureCategory.getTitle());
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" style=\"display: none;\" name=\"lecture_id\" value=\"");
      out.print(lecture.getLecture_id());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\" id=\"lec_title\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"title\">제목</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"title\" name=\"title\" placeholder=\"제목을 입력해주세요\" value=\"");
      out.print(lecture.getTitle());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\" id=\"lec_content\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"content\">설명</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<textarea class=\"form-control\" rows=\"3\" id=\"content\" name=\"content\" placeholder=\"강의 설명을 입력주세요\">");
      out.print(lecture.getContent());
      out.write("</textarea>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\" id=\"lec_link\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"link\">URL</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"input-group input-group-sm\" style=\"border-radius:0; !important\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"link\" name=\"link\" placeholder=\"강의 동영상 URL을 입력주세요\" style=\"height:34px; font-size: 14px; border-radius:0;\" value=\"");
      out.print(lecture.getLink());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"input-group-btn\" >\r\n");
      out.write("                     \t\t\t\t <button type=\"button\" class=\"btn btn-info btn-flat\" onClick=\"checkVideoUrl()\" style=\"font-size: 14px; border-color: #367fa9; background-color: #3c8dbc; height:34px; border-radius:0; !important\">확인</button>\r\n");
      out.write("                    \t\t\t</span>\r\n");
      out.write("                    \t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p class=\"help-block\">Vimeo에 등록된 동영상만 확인할 수 있습니다.</p>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"link\">현재 등록된 동영상</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<iframe src=\"");
      out.print(lecture.getLink());
      out.write("\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"width: 100%; height: 500px;\"></iframe>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\" id=\"lec_thumbnail\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"thumbnail\">썸네일 이미지</label><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"hidden\" class=\"form-control\" id=\"thumbnail\" name=\"thumbnail\" placeholder=\"강의 시간\" value=\"");
      out.print(lecture.getThumbnail());
      out.write("\" readonly>\r\n");
      out.write("\t\t\t\t\t\t\t\t<img src=\"");
      out.print(lecture.getThumbnail());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label>현재 등록된 강의 자료</label><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<a href=\"/data/file/lec/");
      out.print(lecture.getLecturefile());
      out.write("\" download>");
      out.print(lecture.getLecturefile());
      out.write("</a><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input name=\"lecturefile\" value=\"");
      out.print(lecture.getLecturefile());
      out.write("\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\" id=\"lec_lecturefile\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"lectureSlideFile\">변경할 강의 자료</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"file\" id=\"lecturefile\" name=\"lectureSlideFile\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\" id=\"lec_homework\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label>현재 등록된 과제</label><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<a href=\"/data/file/lec/");
      out.print(lecture.getHomework());
      out.write("\" download>");
      out.print(lecture.getHomework());
      out.write("</a><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input name=\"homework\" value=\"");
      out.print(lecture.getHomework());
      out.write("\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\" id=\"lec_homework\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"homeworkFile\">변경할 과제</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"file\" id=\"homework\" name=\"homeworkFile\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<!-- /.box-body -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"box-footer\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" onClick=\"modifyLecture()\" disabled=\"disabled\" id=\"lec_btn\">수정</button>\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" onClick=\"goLectrueAll()\">목록</button>\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" onClick=\"deleteOneLecture(");
      out.print(lecture.getLecture_id());
      out.write(',');
      out.write(' ');
      out.print(lecture.getLecturecategory_id());
      out.write(")\">삭제</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- /.box -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<!-- /.content -->\r\n");
      out.write("</div>\r\n");
      out.write("<!-- /.content-wrapper -->\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "inc/footer.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("menu_name", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("lecture", request.getCharacterEncoding()), out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
