package com.min.membercategory.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

import com.min.domain.Member;

@Repository
public class MemberDAOSpringJdbc implements MemberDAO{
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	@Override
	public List selectAll() {
		String sql = "select * from member order by member_id desc";
		List list = jdbcTemplate.query(sql, new RowMapper<Member>(){
			@Override
			public Member mapRow(ResultSet rs, int row) throws SQLException {
				Member member = new Member();
				member.setMember_id(rs.getInt("member_id"));
				member.setMembercategory_id(rs.getInt("membercategory_id"));
				member.setEmail(rs.getString("email"));
				member.setNickname(rs.getString("nickname"));
				member.setMypoint(rs.getInt("mypoint"));
				member.setRegdate(rs.getString("regdate"));
				return member;
			}
		});
		return list;
	}
	
	@Override
	public List selectAll(int membercategory_id) {
		String sql = "select * from member where membercategory_id=? order by member_id desc";
		List list = jdbcTemplate.query(sql, new RowMapper<Member>(){
			@Override
			public Member mapRow(ResultSet rs, int row) throws SQLException {
				Member member = new Member();
				member.setMember_id(rs.getInt("member_id"));
				member.setMembercategory_id(rs.getInt("membercategory_id"));
				member.setEmail(rs.getString("email"));
				member.setNickname(rs.getString("nickname"));
				member.setMypoint(rs.getInt("mypoint"));
				member.setRegdate(rs.getString("regdate"));
				return member;
			}
		}, membercategory_id);
		return list;
	}
	
	@Override
	public Member select(int member_id) {
		String sql = "select * from member where member_id=?";
		Member member = jdbcTemplate.queryForObject(sql, new RowMapper<Member>(){
			@Override
			public Member mapRow(ResultSet rs, int row) throws SQLException {
				Member member = new Member();
				member.setMember_id(rs.getInt("member_id"));
				member.setMembercategory_id(rs.getInt("membercategory_id"));
				member.setEmail(rs.getString("email"));
				member.setNickname(rs.getString("nickname"));
				member.setMypoint(rs.getInt("mypoint"));
				member.setRegdate(rs.getString("regdate"));
				return member;
			}
		}, member_id);
		return member;
	}

	@Override
	public int insert(Member member) {
		String sql = "insert into member(membercategory_id, email)";
		sql += " values(?, ?)";
		return 0;
	}

	@Override
	public int delete(int member_id) {
		String sql = "delete from member where member_id=?";
		int result = jdbcTemplate.update(sql, member_id);
		return result;
	}

	@Override
	public int update(Member member) {
		String sql = "update member set nickname=?, mypoint=? where member_id=?";
		int result = jdbcTemplate.update(sql, new Object[]{
				 member.getNickname(),
				 member.getMypoint(),
				 member.getMember_id()
		});
		return result;
	}
	
}
