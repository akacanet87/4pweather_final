package com.min.myquestion.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

import com.min.domain.MyQuestion;

@Repository
public class MyQuestionDAOSpringJdbc implements MyQuestionDAO{
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	@Override
	public List selectAll() {
		String sql = "select * from myquestion order by myquestion_id desc";
		List list = jdbcTemplate.query(sql, new RowMapper<MyQuestion>() {
			@Override
			public MyQuestion mapRow(ResultSet rs, int row) throws SQLException {
				MyQuestion myQuestion = new MyQuestion();
				myQuestion.setMyquestion_id(rs.getInt("myquestion_id"));
				myQuestion.setMember_id(rs.getInt("member_id"));
				myQuestion.setLecture_id(rs.getInt("lecture_id"));
				myQuestion.setContent(rs.getString("content"));
				myQuestion.setReplyer(rs.getString("replyer"));
				myQuestion.setReply(rs.getString("reply"));
				myQuestion.setRegdate(rs.getString("regdate"));
				return myQuestion;
			}
		});
		return list;
	}

	@Override
	public MyQuestion select(int myquestion_id) {
		String sql = "select * from myquestion where myquestion_id=?";
		MyQuestion myQuestion = jdbcTemplate.queryForObject(sql, new RowMapper<MyQuestion>() {
			@Override
			public MyQuestion mapRow(ResultSet rs, int row) throws SQLException {
				MyQuestion myQuestion = new MyQuestion();
				myQuestion.setMyquestion_id(rs.getInt("myquestion_id"));
				myQuestion.setMember_id(rs.getInt("member_id"));
				myQuestion.setLecture_id(rs.getInt("lecture_id"));
				myQuestion.setContent(rs.getString("content"));
				myQuestion.setReplyer(rs.getString("replyer"));
				myQuestion.setReply(rs.getString("reply"));
				myQuestion.setRegdate(rs.getString("regdate"));
				return myQuestion;
			}
		}, myquestion_id);
		return myQuestion;
	}

	@Override
	public int insert(MyQuestion myQuestion) {
		String sql = "insert into myquestion(lecture_id, member_id, content)";
		sql += " values(?, ?, ?)";
		int result = jdbcTemplate.update(sql, new Object[]{
				myQuestion.getLecture_id(),
				myQuestion.getMember_id(),
				myQuestion.getContent()
		});
		return result;
	}

	@Override
	public int delete(int myquestion_id) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int update(MyQuestion myQuestion) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public List selectAllFromMember(int member_id) {
		String sql = "select * from myquestion where member_id=? order by myquestion_id desc";
		List list = jdbcTemplate.query(sql, new RowMapper<MyQuestion>() {
			@Override
			public MyQuestion mapRow(ResultSet rs, int row) throws SQLException {
				MyQuestion myQuestion = new MyQuestion();
				myQuestion.setMyquestion_id(rs.getInt("myquestion_id"));
				myQuestion.setMember_id(rs.getInt("member_id"));
				myQuestion.setLecture_id(rs.getInt("lecture_id"));
				myQuestion.setContent(rs.getString("content"));
				myQuestion.setReplyer(rs.getString("replyer"));
				myQuestion.setReply(rs.getString("reply"));
				myQuestion.setRegdate(rs.getString("regdate"));
				return myQuestion;
			}
		}, member_id);
		return list;
	}

	@Override
	public List selectAllFromLecture(int lecture_id) {
		String sql = "select * from myquestion where lecture_id=? order by myquestion_id desc";
		List list = jdbcTemplate.query(sql, new RowMapper<MyQuestion>() {
			@Override
			public MyQuestion mapRow(ResultSet rs, int row) throws SQLException {
				MyQuestion myQuestion = new MyQuestion();
				myQuestion.setMyquestion_id(rs.getInt("myquestion_id"));
				myQuestion.setMember_id(rs.getInt("member_id"));
				myQuestion.setLecture_id(rs.getInt("lecture_id"));
				myQuestion.setContent(rs.getString("content"));
				myQuestion.setReplyer(rs.getString("replyer"));
				myQuestion.setReply(rs.getString("reply"));
				myQuestion.setRegdate(rs.getString("regdate"));
				return myQuestion;
			}
		}, lecture_id);
		return list;
	}

}
